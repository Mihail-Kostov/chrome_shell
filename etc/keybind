#!/bin/bash
ETC_DIR=$(cd $(dirname ${BASH_SOURCE:-$0});pwd)

key_array=("1" "2" "3" "4" "5" "6" "7" "8" "9" "0" "\-" "\^" "\\")
key_array+=("\!" "\"" "#" "\$" "&" "\'" "(" ")" "=" "~" "|")
key_array+=("q" "w" "e" "r" "t" "y" "u" "i" "o" "p" "@" "[")
key_array+=("Q" "W" "E" "R" "T" "Y" "U" "I" "O" "P" "\`" "\{")
key_array+=("a" "s" "d" "f" "g" "h" "j" "k" "l" "\;" ":" "]")
key_array+=("A" "S" "D" "F" "G" "H" "J" "K" "L" "+" "\*" "\}")
key_array+=("z" "x" "c" "v" "b" "n" "m" "," "." "/" "_")
key_array+=("Z" "X" "C" "V" "B" "N" "M" "\<" "\>" "\?" "\_")

_deactivate_mouse_mode() {

    for key in "${key_array[@]}"
    do
        if [[ "$SHELL" =~ "zsh" ]]
        then
            bindkey $key self-insert
        else
            #bind "${key}":self-insert >/dev/null 2>&1
            source "$ETC_DIR/onkey"
        fi
    done
    if [[ "$SHELL" =~ "zsh" ]]
    then
        bindkey "\e[A" up-line-or-history
        bindkey "\e[B" down-line-or-history
        bindkey "\e[C" forward-char
        bindkey "\e[D" backward-char
        bindkey -r "\e[A\e[A"
        bindkey -r "\e[B\e[B"
        bindkey -r "\e[C\e[C"
        bindkey -r "\e[D\e[D"
    else
        bind '"\e[A":previous-history'
        bind '"\e[B":next-history'
        bind '"\e[C":forward-char'
        bind '"\e[D":backward-char'
        bind -r "\e[A\e[A"
        bind -r "\e[B\e[B"
        bind -r "\e[C\e[C"
        bind -r "\e[D\e[D"
    fi

}

__mouse_up() {
    chrome_shell mouse u u
    _activate_mouse_mode
}

___mouse_up() {
    chrome_shell mouse u u u u u u u u
    _activate_mouse_mode
}

__mouse_down() {
    chrome_shell mouse d d
    _activate_mouse_mode
}

___mouse_down() {
    chrome_shell mouse d d d d d d d d
    _activate_mouse_mode
}

__mouse_right() {
    chrome_shell mouse r r
    _activate_mouse_mode
}

___mouse_right() {
    chrome_shell mouse r r r r r r r r
    _activate_mouse_mode
}

__mouse_left() {
    chrome_shell mouse l l
    _activate_mouse_mode
}

___mouse_left() {
    chrome_shell mouse l l l l l l l l
    _activate_mouse_mode
}

if [[ "$SHELL" =~ "zsh" ]]
then
    zle -N _deactivate_mouse_mode
    zle -N __mouse_up
    zle -N ___mouse_up
    zle -N __mouse_down
    zle -N ___mouse_down
    zle -N __mouse_right
    zle -N ___mouse_right
    zle -N __mouse_left
    zle -N ___mouse_left
fi

_activate_mouse_mode() {

    for key in "${key_array[@]}"
    do
        if [[ "$SHELL" =~ "zsh" ]]
        then
            bindkey $key _deactivate_mouse_mode
        else
            #bind -x "'"\"${key}\":\"_deactivate_mouse_mode\""'"
            source "$ETC_DIR/unkey"
        fi
    done
    if [[ "$SHELL" =~ "zsh" ]]
    then
        bindkey "\e[A" __mouse_up
        bindkey "\e[A\e[A" ___mouse_up
        bindkey "\e[B" __mouse_down
        bindkey "\e[B\e[B" ___mouse_down
        bindkey "\e[C" __mouse_right
        bindkey "\e[C\e[C" ___mouse_right
        bindkey "\e[D" __mouse_left
        bindkey "\e[D\e[D" ___mouse_left
    else
        bind '"\e[A":"__mouse_up\C-m"' > /dev/null 2>&1
        bind '"\e[B":"__mouse_down\C-m"' > /dev/null 2>&1
        bind '"\e[C":"__mouse_right\C-m"' > /dev/null 2>&1
        bind '"\e[D":"__mouse_left\C-m"' > /dev/null 2>&1
        bind '"\e[A\e[A":"___mouse_up\C-m"' > /dev/null 2>&1
        bind '"\e[B\e[B":"___mouse_down\C-m"' > /dev/null 2>&1
        bind '"\e[C\e[C":"___mouse_right\C-m"' > /dev/null 2>&1
        bind '"\e[D\e[D":"___mouse_left\C-m"' > /dev/null 2>&1
    fi

}

